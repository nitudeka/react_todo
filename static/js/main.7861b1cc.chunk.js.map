{"version":3,"sources":["store/reducers/form.js","store/reducers/nav.js","store/reducers/index.js","store/constants/index.js","store/actions/_validateInput.js","components/navbar/index.js","store/actions/index.js","components/form/_input.js","components/form/index.js","components/header/index.js","pages/home/index.js","containers/app.js","serviceWorker.js","index.js"],"names":["initialState","register","formName","formBtn","inputs","registerName","type","placeholder","valid","focused","inputValue","rules","required","registerEmail","email","registerPassword","minLength","login","loginEmail","loginPassword","defaultForm","combineReducers","form","state","arguments","length","undefined","action","_action$payload","payload","inputName","Object","objectSpread","defineProperty","nav","validate","input","maxLength","test","String","toLowerCase","connect","dispatch","toggleForm","props","react_default","a","createElement","className","href","onClick","classNames","push","value","onChange","join","inputChangeHandler","validateInput","mainForm","keys","map","_input","event","target","key","toUpperCase","header","components_form","Home","components_header","App","components_navbar","home","Component","Boolean","window","location","hostname","match","store","createStore","reducers","ReactDOM","render","es","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7861b1cc.chunk.js","sourcesContent":["import { INPUT_CHANGE } from '../constants';\n\nconst initialState = {\n  register: {\n    formName: 'register',\n    formBtn: 'Take me in',\n    inputs: {\n      registerName: {\n        type: 'text',\n        placeholder: 'Name',\n        valid: false,\n        focused: false,\n        inputValue: '',\n        rules: {\n          required: true\n        }\n      },\n      registerEmail: {\n        type: 'email',\n        placeholder: 'Email',\n        valid: false,\n        focused: false,\n        inputValue: '',\n        rules: {\n          required: true,\n          email: true\n        }\n      },\n      registerPassword: {\n        type: 'password',\n        placeholder: 'Password',\n        valid: false,\n        focused: false,\n        inputValue: '',\n        rules: {\n          required: true,\n          minLength: 6\n        }\n      }\n    }\n  },\n  login: {\n    formName: 'login',\n    formBtn: 'I am back',\n    inputs: {\n      loginEmail: {\n        type: 'email',\n        placeholder: 'Email',\n        valid: false,\n        focused: false,\n        inputValue: '',\n        rules: {\n          required: true,\n          email: true\n        }\n      },\n      loginPassword: {\n        type: 'password',\n        placeholder: 'Password',\n        valid: false,\n        focused: false,\n        inputValue: '',\n        rules: {\n          required: true,\n          minLength: 6\n        }\n      }\n    }\n  }\n}\n\nexport default (state=initialState, action) => {\n  switch (action.type) {\n    case INPUT_CHANGE:\n      const { formName, inputName, inputValue, valid } = action.payload;\n      return {\n        ...state,\n        [formName]: {\n          ...state[formName],\n          inputs: {\n            ...state[formName].inputs,\n            [inputName]: {\n              ...state[formName].inputs[inputName],\n              focused: true, valid, inputValue\n            }\n          }\n        }\n      }\n    \n    default: return state;\n  }\n};\n","import { CHANGE_FORM } from '../constants';\n\nconst initialState = {\n  defaultForm: true // register\n}\n\nexport default (state=initialState, action) => {\n  switch (action.type) {\n    case CHANGE_FORM:\n      return { ...state, defaultForm: !state.defaultForm };\n\n    default: return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport form from './form';\nimport nav from './nav';\n\nexport default combineReducers({ form, nav });\n","export const INPUT_CHANGE = 'INPUT_CHANGE';\n\nexport const CHANGE_FORM = 'CHANGE_FORM';\n","const validate = (input, rules) => {\n  let valid = true;\n  if (rules.required) {\n    valid = input.length >= 1;\n    if (!valid) return false;\n  };\n  if (rules.minLength) {\n    valid = input.length >= rules.minLength;\n    if (!valid) return false;\n  };\n  if (rules.maxLength) {\n    valid = input.length <= rules.maxLength;\n    if (!valid) return false;\n  };\n  if (rules.email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    valid = re.test(String(input).toLowerCase());\n    if (!valid) return false;\n  }\n  return valid;\n}\n\nexport default validate;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleForm } from '../../store/actions';\n\nconst navbar = (props) => {\n  return (\n    <div className='nav'>\n      <div className='nav__container'>\n        <a className='nav__logo' href='/'>Logo</a>\n        <ul className='nav__list'>\n          <li className='nav__item'><a className='nav__link' href='/'>Home</a></li>\n          <li className='nav__item'><a className='nav__link' href='/'>Try it!</a></li>\n        </ul>\n      </div>\n      <div onClick={props.toggleForm} className='nav__form-name'>{props.formName}</div>\n    </div>\n  )\n};\n\nconst mapStateToProps = (state) => ({\n  formName: state.nav.defaultForm ? 'Login' : 'Register'\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleForm: () => { dispatch(toggleForm()) }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(navbar);\n","import { INPUT_CHANGE, CHANGE_FORM } from '../constants';\nimport validateInput from './_validateInput';\n\nexport const inputChangeHandler = (formName, inputValue, inputName, rules) => {\n  const inputIsValid = validateInput(inputValue, rules);\n  return {\n    type: INPUT_CHANGE,\n    payload: { formName, inputValue, inputName, valid: inputIsValid }\n  }\n};\n\nexport const toggleForm = () => ({\n  type: CHANGE_FORM\n})\n","import React from 'react';\n\nconst input = (props) => {\n  let classNames = ['form__input'];\n  if (props.focused) {\n    classNames.push('form__input--invalid');\n    if (props.valid) {\n      classNames.push('form__input--valid');\n    }\n  }\n  return (\n    <input value={props.value} onChange={props.onChange} className={classNames.join(' ')} type={props.type} placeholder={props.placeholder} />\n  )\n};\n\nexport default input;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { inputChangeHandler } from '../../store/actions';\nimport Input from './_input';\n\nconst form = (props) => {\n  /*\n  * set the form according to the \"defaultForm\" property\n  * if it is \"true\" then set it to \"register\" otherwise to \"login\"\n  *\n  */\n  const mainForm = props.defaultForm ? props.register : props.login;\n  const inputs = Object.keys(mainForm.inputs).map((input) => {\n    const inputName = mainForm.inputs[input];\n    return (\n      <Input\n        onChange={(event) => {\n          props.inputChangeHandler(mainForm.formName, event.target.value, input, inputName.rules) }\n        }\n        focused={inputName.focused}\n        value={inputName.inputValue}\n        valid={inputName.valid}\n        key={input}\n        type={inputName.type}\n        placeholder={inputName.placeholder}\n      />\n    )\n  });\n\n  return (\n    <div className='form'>\n      <span className='form__header'>{mainForm.formName.toUpperCase()}</span>\n      <div className='form__container'>\n        { inputs }\n      </div>\n      <button className='form__btn'>{mainForm.formBtn}</button>\n    </div>\n  )\n};\n\nconst mapStateToProps = (state) => {\n  const { form, nav } = state;\n  return {\n    defaultForm: nav.defaultForm, // required property to toggle between the login and register form\n    register: form.register,\n    login: form.login\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    inputChangeHandler: (formName, inputValue, inputName, rules) => {\n      dispatch(inputChangeHandler(formName, inputValue, inputName, rules))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(form);\n\n/*\n  @todo\n  #1: remove unnecessery input updates\n*/\n","import React from 'react';\nimport Form from '../form/index';\n\nconst header = (props) => {\n  return (\n    <div className='header'>\n      <span className='header__seperator'></span>\n      <div className='header__container'>\n        <div className='header__container--main'>\n          <h2 className='header__heading'>Todo</h2>\n          <span className='header__heading--main'>An app to manage your tasks</span>\n          <span className='header__heading--sub'>Try it or create an account to use it across your devices</span>\n        </div>\n        <div className='header__container--sub'>\n          <Form />\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default header;\n","import React from 'react';\nimport Header from '../../components/header';\n\nconst Home = (props) => {\n  return (\n    <div className='home'>\n      <Header />\n    </div>\n  )\n};\n\nexport default Home;\n","import React, { Component } from 'react';\nimport Navbar from '../components/navbar';\nimport Home from '../pages/home';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Home />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers from './store/reducers';\nimport App from './containers/app';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nconst store = createStore(reducers);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}