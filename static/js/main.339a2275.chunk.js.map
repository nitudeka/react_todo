{"version":3,"sources":["store/reducers/index.js","store/actions/index.js","store/constants/index.js","components/Form/Input/Input.js","components/Form/FormValidation.js","components/Form/Signin/Signin.js","components/Form/Register/Register.js","components/Svg.js","components/Pages/Home.js","components/Routes/Routes.js","components/UI/Spinner/Spinner.js","components/Navigation/Navlink.js","components/Navigation/Navbar.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","containers/App.js","serviceWorker.js","index.js"],"names":["initialState","name","inputValue","email","tasks","modalShown","taskProgress","isPending","errMsg","taskHandler","dispatch","task","url","type","fetch","concat","method","headers","Content-Type","authorization","window","localStorage","getItem","body","JSON","stringify","then","res","json","data","payload","catch","err","authHandler","password","content-type","token","setItem","Input","props","style","focused","valid","borderBottom","react_default","a","createElement","className","placeholder","onChange","label","repeatPassword","validateFormElement","value","rules","isValid","required","trim","minLength","length","isEmail","test","Register","state","form","validation","errorMessage","formIsValid","onInputChange","event","element","updatedState","Object","objectSpread","_this","updatedElement","target","FormValidation","keys","map","elements","setState","_this2","this","Form_Input_Input","key","disabled","onClick","signinHandler","Component","withRouter","connect","Svg","version","id","xmlns","xmlnsXlink","x","y","viewBox","xmlSpace","d","Home","getTasks","components_Svg","completeTask","deleteTask","taskPrgs","i","Routes","Route","path","render","Signin","Redirect","to","Form_Register_Register","exact","Pages_Home","Spinner","visibility","visible","resetState","Link","textDecoration","route","mathod","clear","link","navlink","Navigation_Navlink","newTask","changeModalState","location","pathname","Backdrop","show","push","join","children","Modal","modalIsVisible","UI_Backdrop_Backdrop","App","addTaskHandler","addNewTask","Navigation_Navbar","toggleModalState","UI_Spinner_Spinner","UI_Modal_Modal","getInputChange","components_Routes_Routes","Boolean","hostname","match","store","createStore","arguments","undefined","action","applyMiddleware","ReduxThunk","ReactDOM","BrowserRouter","react_redux_es","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.339a2275.chunk.js","sourcesContent":["import {\n  GET_INPUT_CHANGE,\n  CHANGE_SPINNER_STATE,\n  TOGGLE_MODAL,\n  GET_TASKS_PENDING,\n  GET_TASKS_SUCCESS,\n  GET_TASKS_FAILED,\n  AUTHENTICATING_USER_PENDING,\n  AUTHENTICATING_USER_SUCCESS,\n  AUTHENTICATING_USER_FAILED\n} from '../constants';\n\nconst initialState = {\n  name: '',\n  inputValue: '',\n  email: '',\n  tasks: [],\n  modalShown: false,\n  taskProgress: [],\n  isPending: false,\n  errMsg: false\n}\n\nexport default (state=initialState, action={}) => {\n  switch (action.type) {\n    case GET_INPUT_CHANGE:\n      return { ...state, inputValue: action.payload };\n\n    case 'RESET_STATE':\n      return { ...state, errMsg: false };\n    \n    case CHANGE_SPINNER_STATE:\n      return { ...state, isPending: !state.isPending };\n\n    case TOGGLE_MODAL:\n      return {\n        ...state, modalShown: !state.modalShown\n      }\n\n    case GET_TASKS_PENDING:\n      return { ...state, isPending: true };\n\n    case GET_TASKS_SUCCESS:\n      const tasks = Object.keys(action.payload);\n      const taskProgress = tasks.map((task) => {\n        return action.payload[task];\n      })\n      return { ...state, isPending: false, tasks: tasks, taskProgress: taskProgress };\n\n    case GET_TASKS_FAILED:\n      return { ...state, isPending: false, err: action.payload };\n    \n    case AUTHENTICATING_USER_PENDING:\n      return { ...state, isPending: true };\n      \n    case AUTHENTICATING_USER_SUCCESS:\n      return { ...state, isPending: false }\n\n    case AUTHENTICATING_USER_FAILED:\n      return { ...state, isPending: false, errMsg: action.payload }\n      \n    default: return state;\n  }\n}\n","import {\n  GET_INPUT_CHANGE,\n  CHANGE_SPINNER_STATE,\n  TOGGLE_MODAL,\n  GET_TASKS_PENDING,\n  GET_TASKS_SUCCESS,\n  GET_TASKS_FAILED,\n  AUTHENTICATING_USER_PENDING,\n  AUTHENTICATING_USER_SUCCESS,\n  AUTHENTICATING_USER_FAILED\n} from '../constants';\n\nexport const toggleSpinner = () => ({\n  type: CHANGE_SPINNER_STATE\n});\n\nexport const toggleModal = () => ({\n  type: TOGGLE_MODAL\n});\n\nexport const getInputChange = (text) => ({\n  type: GET_INPUT_CHANGE,\n  payload: text\n});\n\nexport const taskHandler = (dispatch, task, url) => {\n  dispatch({ type: GET_TASKS_PENDING });\n  fetch(`https://reacttodoapi.herokuapp.com/${url}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: window.localStorage.getItem('token')\n    },\n    body: JSON.stringify({\n      task: task\n    })\n  }).then((res) => res.json())\n  .then((data) => {\n    if (typeof(data) === 'object') {\n      dispatch({ type: GET_TASKS_SUCCESS, payload: data });\n    }\n  })\n  .catch(err => dispatch({ type: GET_TASKS_FAILED, payload: err }));\n};\n\nexport const getTasks = (dispatch) => {\n  dispatch({ type: GET_TASKS_PENDING });\n  fetch('https://reacttodoapi.herokuapp.com/tasks', {\n    headers: { authorization: window.localStorage.getItem('token') }\n  }).then((res) => res.json())\n  .then((data) => {\n    if (typeof(data) === 'object') {\n      dispatch({ type: GET_TASKS_SUCCESS, payload: data });\n    }\n  })\n  .catch(err => dispatch({ type: GET_TASKS_FAILED, payload: err }));\n}\n\nexport const authHandler = (email, password, name, url) => {\n  return (dispatch) => {\n    dispatch({ type: AUTHENTICATING_USER_PENDING });\n    fetch(`https://reacttodoapi.herokuapp.com/${url}`, {\n      method: 'post',\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify({ email, password, name })\n    }).then((res) => res.json())\n    .then((token) => {\n      if (typeof(token) === 'object') {\n        localStorage.setItem('token', token.token);\n        dispatch({ type: AUTHENTICATING_USER_SUCCESS });\n      } else {\n        dispatch({ type: AUTHENTICATING_USER_FAILED, payload: token })\n      }\n    })\n    .catch((err) => {\n      dispatch({ type: AUTHENTICATING_USER_FAILED})\n    })\n  }\n}\n","export const GET_INPUT_CHANGE = 'GET_INPUT_CHANGE';\n\nexport const CHANGE_SPINNER_STATE = 'CHANGE_SPINNER_STATE';\n\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL';\n\nexport const GET_TASKS_PENDING = 'GET_TASKS_PENDING';\nexport const GET_TASKS_SUCCESS = 'GET_TASKS_SUCCESS';\nexport const GET_TASKS_FAILED = 'GET_TASKS_FAILED';\n\nexport const AUTHENTICATING_USER_PENDING = 'AUTHENTICATING_USER_PENDING';\nexport const AUTHENTICATING_USER_SUCCESS = 'AUTHENTICATING_USER_SUCCESS';\nexport const AUTHENTICATING_USER_FAILED = 'AUTHENTICATING_USER_FAILED';\n","import React from 'react';\n\nconst Input = (props) => {\n  let style = {};\n  if (props.focused) {\n    if (props.valid) {\n      style = {borderBottom: '3px solid #007e33'}\n    } else {\n      style = {borderBottom: '3px solid #ff3547'}\n    }\n  }\n  \n  return (\n    <div className='form__inputs'>\n      <input style={style} className='form__input' type={props.type} placeholder={props.placeholder} onChange={props.onChange} />\n      <label className='form__label'>{props.label}</label>\n    </div>\n  )\n}\n\nexport default Input;\n","let repeatPassword = '';\n\nconst validateFormElement = (value, rules) => {\n  let isValid = true;\n  if (rules.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid\n  }\n  if (rules.password) {\n    repeatPassword = value;\n  }\n  if (rules.repeatPassword) {\n    isValid = repeatPassword === value;\n  }\n  return isValid;\n}\n\nexport default validateFormElement;\n","import React, { Component } from 'react';\nimport Input from '../Input/Input';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { authHandler } from '../../../store/actions';\nimport FormValidation from '../FormValidation';\n\nclass Register extends Component {\n  state = {\n    form: {\n      email: {\n        label: 'Your email',\n        type: 'text',\n        placeholder: 'Your email',\n        value: '',\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        focused: false\n      },\n      password: {\n        label: 'Your Password',\n        type: 'password',\n        placeholder: 'Your password',\n        value: '',\n        validation: {\n          required: true,\n          minLength: 6\n        },\n        valid: false,\n        focused: false\n      },\n    },\n    errorMessage: null,\n    formIsValid: false\n  }\n\n  onInputChange = (event, element) => {\n    const updatedState = {...this.state.form};\n    const updatedElement = {...updatedState[element]};\n    updatedElement.value = event.target.value;\n    updatedElement.focused = true;\n    updatedElement.valid = FormValidation(event.target.value, updatedElement.validation);\n    updatedState[element] = updatedElement;\n    let formIsValid = true;\n    Object.keys(updatedState).map(elements => {\n      return formIsValid = updatedState[elements].valid && formIsValid;\n    })\n    this.setState({form: updatedState, formIsValid: formIsValid});\n  }\n\n  render () {\n    const signinHandler = () => {\n      this.props.signinHandler(this.state.form.email.value, this.state.form.password.value);\n    }\n    \n    const form = Object.keys(this.state.form).map(element => {\n      return <Input\n        valid={this.state.form[element].valid}\n        focused={this.state.form[element].focused}\n        key={element}\n        placeholder={this.state.form[element].placeholder}\n        type={this.state.form[element].type}\n        label={this.state.form[element].label}\n        onChange={(event) => this.onInputChange(event, element)}\n      />\n    })\n    \n    return (\n      <div className='form'>\n        <div className='form__head'>\n          <div className='form__heading'>\n            <span className='form__heading--main'>Signin</span>\n            <span className='form__heading--sub'>{this.props.errMsg}</span>\n          </div>\n        </div>\n        {form}\n        <button disabled={!this.state.formIsValid} onClick={signinHandler} className='form__btn'>I am back!</button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.email,\n  errMsg: state.errMsg\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  signinHandler: (email, password) => dispatch(authHandler(email, password, null, 'login')),\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Register));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { authHandler } from '../../../store/actions';\nimport Input from '../Input/Input';\nimport FormValidation from '../FormValidation';\n\nclass Register extends Component {\n  state = {\n    form: {\n      name: {\n        label: 'Your name',\n        type: 'text',\n        placeholder: 'Your name',\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        focused: false\n      },\n      email: {\n        label: 'Your email',\n        type: 'email',\n        placeholder: 'Your email',\n        value: '',\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        focused: false\n      },\n      password: {\n        label: 'Your Password (min-6)',\n        type: 'password',\n        placeholder: 'Your password (min-6)',\n        value: '',\n        validation: {\n          required: true,\n          minLength: 6,\n          password: true\n        },\n        valid: false,\n        focused: false\n      },\n      repeatPassword: {\n        label: 'Repeat password',\n        type: 'password',\n        placeholder: 'Repeat password',\n        value: '',\n        validation: {\n          required: true,\n          minLength: 6,\n          repeatPassword: true\n        },\n        valid: false,\n        focused: false\n      }\n    },\n    errorMessage: null,\n    formIsValid: false\n  }\n\n  onInputChange = (event, element) => {\n    const updatedState = {...this.state.form};\n    const updatedElement = {...updatedState[element]};\n    updatedElement.value = event.target.value;\n    updatedElement.focused = true;\n    updatedElement.valid = FormValidation(event.target.value, updatedElement.validation);\n    updatedState[element] = updatedElement;\n    let formIsValid = true;\n    Object.keys(updatedState).map(elements => {\n      return formIsValid = updatedState[elements].valid && formIsValid;\n    })\n    this.setState({form: updatedState, formIsValid: formIsValid});\n  }\n\n  render () {\n    const registerHandler = () => {\n      this.props.signinHandler(this.state.form.email.value, this.state.form.password.value, this.state.form.name.value);\n    }\n    \n    const form = Object.keys(this.state.form).map(element => {\n      return <Input\n        valid={this.state.form[element].valid}\n        focused={this.state.form[element].focused}\n        key={element}\n        placeholder={this.state.form[element].placeholder}\n        type={this.state.form[element].type}\n        label={this.state.form[element].label}\n        onChange={(event) => this.onInputChange(event, element)}\n      />\n    })\n    \n    return (\n      <div className='form'>\n        <div className='form__head'>\n          <div className='form__heading'>\n            <span className='form__heading--main'>Register</span>\n            <span className='form__heading--sub'>{this.props.errMsg}</span>\n          </div>\n        </div>\n        {form}\n        <button disabled={!this.state.formIsValid} onClick={registerHandler} className='form__btn'>Take me in!</button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.email,\n  errMsg: state.errMsg\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  signinHandler: (email, password, name) => dispatch(authHandler(email, password, name, 'register')),\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Register));\n","import React from 'react';\n\nconst Svg = (props) => {\n  switch (props.name) {\n    case 'cross':\n      return (\n        <svg onClick={props.onClick} className={props.className} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 339.177 339.177\" xmlSpace=\"preserve\">\n        <g>\n          <path d=\"M247.244,169.59l83.938-83.938c5.332-5.327,7.994-11.798,7.994-19.414c0-7.614-2.669-14.084-7.994-19.414L292.355,7.993 C287.026,2.665,280.556,0,272.944,0c-7.617,0-14.085,2.665-19.417,7.993L169.59,91.931L85.651,7.993 C80.325,2.665,73.854,0,66.237,0c-7.611,0-14.083,2.665-19.414,7.993L7.994,46.824C2.667,52.15,0,58.624,0,66.238 c0,7.616,2.664,14.084,7.994,19.414l83.937,83.938L7.994,253.528C2.667,258.859,0,265.327,0,272.945 c0,7.61,2.664,14.082,7.994,19.41l38.83,38.828c5.33,5.332,11.803,7.994,19.414,7.994c7.616,0,14.084-2.669,19.414-7.994 l83.939-83.938l83.944,83.938c5.328,5.332,11.793,7.994,19.417,7.994c7.611,0,14.082-2.669,19.411-7.994l38.82-38.828 c5.332-5.324,7.994-11.8,7.994-19.41c0-7.618-2.662-14.086-7.994-19.417L247.244,169.59z\"/>\n        </g>\n        </svg>\n      );\n    case 'check':\n      return (\n        <svg onClick={props.onClick} className={props.className} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 442.533 442.533\" xmlSpace=\"preserve\">\n        <g>\n          <path d=\"M434.539,98.499l-38.828-38.828c-5.324-5.328-11.799-7.993-19.41-7.993c-7.618,0-14.093,2.665-19.417,7.993L169.59,247.248 l-83.939-84.225c-5.33-5.33-11.801-7.992-19.412-7.992c-7.616,0-14.087,2.662-19.417,7.992L7.994,201.852 C2.664,207.181,0,213.654,0,221.269c0,7.609,2.664,14.088,7.994,19.416l103.351,103.349l38.831,38.828 c5.327,5.332,11.8,7.994,19.414,7.994c7.611,0,14.084-2.669,19.414-7.994l38.83-38.828L434.539,137.33 c5.325-5.33,7.994-11.802,7.994-19.417C442.537,110.302,439.864,103.829,434.539,98.499z\"/>\n        </g>\n        </svg>\n      );\n    default: return null;\n  }\n}\n\nexport default Svg;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { taskHandler, getTasks } from '../../store/actions';\nimport Svg from '../Svg';\n\nclass Home extends Component {\n  componentDidMount () {\n    this.props.getTasks();\n  }\n  \n  render () {\n    let tasks = <span className='home__warning'>Please start adding tasks!!</span>\n    if (this.props.tasks.length > 0) {\n      tasks = this.props.tasks.map((task) => {\n        return (\n          <li className='home__task' key={task}>\n            <span className='task__name'>{task}</span>\n            <div className='home__svg-container'>\n              <Svg onClick={() => this.props.completeTask(task)} name='check' className='home__svg home__svg--check' />\n              <Svg onClick={() => this.props.deleteTask(task)} name='cross' className='home__svg home__svg--cross' />\n            </div>\n          </li>\n        )\n      })\n    }\n\n    let taskProgress = <span className='home__warning'>Please start adding tasks!!</span>;\n    if (this.props.taskProgress.length > 0) {\n      taskProgress = this.props.taskProgress.map((taskPrgs, i) => {\n        return (\n          <li key={i} className='home__task'>\n            <span className='task__name'>{taskPrgs}</span>\n          </li>\n        )\n      })\n    }\n    \n    return (\n      <div className='home'>\n        <div className='home__tasks'>\n          <div className='home__header'>\n            <span className='home__heading'>Your tasks</span>\n          </div>\n          <ol className='home__tasks-container'>\n            {tasks}\n          </ol>\n        </div>\n        <div className='home__tasks'>\n          <div className='home__header'>\n            <span className='home__heading'>Task Progress</span>\n          </div>\n          <ol className='home__tasks-container'>\n            {taskProgress}\n          </ol>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n  taskProgress: state.taskProgress\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  getTasks: () => getTasks(dispatch),\n  completeTask: (task) => taskHandler(dispatch, task, 'taskCompleted'),\n  deleteTask: (task) => taskHandler(dispatch, task, 'deleteTask')\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Signin from '../Form/Signin/Signin';\nimport Register from '../Form/Register/Register';\nimport Home from '../Pages/Home';\n\nconst Routes = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<Route path='/react_todo/signin' render={() => {\n        if (window.localStorage.getItem('token') === null) {\n          return <Signin />\n        } else {\n          return <Redirect to='/react_todo/' />\n        }\n      }} />\n      <Route path='/react_todo/register' render={() => {\n        if (window.localStorage.getItem('token') === null) {\n          return <Register />\n        } else {\n          return <Redirect to='/react_todo/' />\n        }\n      }} />\n      <Route exact path='/react_todo/' render={() => {\n        if (window.localStorage.getItem('token') !== null) {\n          return <Home />\n        } else {\n          return <Redirect to='/react_todo/signin' />\n        }\n      }} />\n\t\t</div>\n\t)\n}\n\nexport default Routes;\n","import React from 'react';\n\nconst Spinner = (props) => {\n\tconst style = {visibility: props.visible ? 'visible' : 'hidden'};\n\n\treturn (\n\t  <div style={style} className=\"sk-three-bounce\">\n\t    <div className=\"sk-child sk-bounce1\"></div>\n\t    <div className=\"sk-child sk-bounce2\"></div>\n\t    <div className=\"sk-child sk-bounce3\"></div>\n\t  </div>\n\t)\n}\n\nexport default Spinner;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst Navlink = (props) => {\n\tconst onClick = () => {\n    props.resetState();\n    fetch('https://reacttodoapi.herokuapp.com/signout', {\n      mathod: 'get',\n      headers: {\n        authorization: window.localStorage.getItem('token')\n      }\n    })\n    window.localStorage.clear();\n\t}\n\n  return (\n    <Link style={{textDecoration: 'none'}} to={props.route}>\n      <li onClick={onClick} className='nav__item'>{props.link}</li>\n    </Link>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetState: () => dispatch({ type: 'RESET_STATE' })\n})\n\nexport default connect(null, mapDispatchToProps)(Navlink);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport Navlink from './Navlink';\n\nconst Navbar = (props) => {\n\tlet navlink = <Navlink route='/react_todo/signin' link='Signout' />\n\tlet newTask = <li onClick={props.changeModalState} className='nav__item'>New Task</li>;\n\tif (props.location.pathname === '/signin') {\n\t\tnewTask = null;\n\t\tnavlink = <Navlink route='/react_todo/register' link='Register' />\n\t} else if (props.location.pathname === '/register') {\n\t\tnewTask = null;\n\t\tnavlink = <Navlink route='/react_todo/signin' link='Signin' />\n\t}\n\t\n\treturn (\n\t  <nav className='nav'>\n\t\t\t<span className='nav__heading'>TODO</span>\n\t\t\t<ul className='nav__list'>\n\t\t\t\t{ navlink }\n\t\t\t\t{ newTask }\n\t\t\t</ul>\n\t\t</nav>\n\t)\n}\n\nexport default withRouter(Navbar);\n","import React from 'react';\n\nconst Backdrop = (props) => {\n  let className = ['backdrop'];\n  if (props.show) {\n    className.push('backdrop--show')\n  } else {\n    className.push('backdrop--hide');\n  }\n  \n  return (\n    <div onClick={props.onClick} className={className.join(' ')}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Backdrop;\n","import React from 'react';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst Modal = (props) => {\n  let className = ['modal'];\n  if (props.modalIsVisible) {\n    className.push('modal--show');\n  } else {\n    className.push('modal--hide');\n  }\n  \n  return (\n    <div>\n      <Backdrop onClick={props.onClick} show={props.modalIsVisible} />\n      <div className={className.join(' ')}>\n          {props.children}\n      </div>\n    </div>\n  )\n}\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { toggleModal, getInputChange, taskHandler } from '../store/actions';\nimport Routes from '../components/Routes/Routes';\nimport Spinner from '../components/UI/Spinner/Spinner';\nimport Navbar from '../components/Navigation/Navbar';\nimport Modal from '../components/UI/Modal/Modal';\n\nclass App extends Component {\n  addTaskHandler = () => {\n    if (this.props.inputValue.length > 0) {\n      this.props.addNewTask(this.props.inputValue);\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar changeModalState={this.props.toggleModalState} />\n        <Spinner visible={this.props.isPending} />\n        <Modal onClick={this.props.toggleModalState} modalIsVisible={this.props.modalShown}>\n          <div className='inputs'>\n\t          <input onChange={this.props.getInputChange} className='input__input' type='text' placeholder='Enter your new task here!' />\n\t          <button onClick={this.addTaskHandler} className='input__button'>Add</button>\n\t        </div>\n        </Modal>\n        <Routes />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isPending: state.isPending,\n  inputValue: state.inputValue,\n  modalShown: state.modalShown\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getInputChange: (event) => dispatch(getInputChange(event.target.value)),\n  toggleModalState: () => dispatch(toggleModal()),\n  addNewTask: (task) => taskHandler(dispatch, task, 'newTask')\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport Reducer from './store/reducers';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(Reducer, applyMiddleware(ReduxThunk));\n\nReactDOM.render(<BrowserRouter><Provider store={store}><App /></Provider></BrowserRouter>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}